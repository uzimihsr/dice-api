// Code generated by MockGen. DO NOT EDIT.
// Source: ./dice/dice.go

// Package mock_dice is a generated GoMock package.
package mock_dice

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDiceInterface is a mock of DiceInterface interface
type MockDiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDiceInterfaceMockRecorder
}

// MockDiceInterfaceMockRecorder is the mock recorder for MockDiceInterface
type MockDiceInterfaceMockRecorder struct {
	mock *MockDiceInterface
}

// NewMockDiceInterface creates a new mock instance
func NewMockDiceInterface(ctrl *gomock.Controller) *MockDiceInterface {
	mock := &MockDiceInterface{ctrl: ctrl}
	mock.recorder = &MockDiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDiceInterface) EXPECT() *MockDiceInterfaceMockRecorder {
	return m.recorder
}

// Roll mocks base method
func (m *MockDiceInterface) Roll() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Roll")
	ret0, _ := ret[0].(int)
	return ret0
}

// Roll indicates an expected call of Roll
func (mr *MockDiceInterfaceMockRecorder) Roll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Roll", reflect.TypeOf((*MockDiceInterface)(nil).Roll))
}

// Cheat mocks base method
func (m *MockDiceInterface) Cheat(arg0 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Cheat", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// Cheat indicates an expected call of Cheat
func (mr *MockDiceInterfaceMockRecorder) Cheat(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cheat", reflect.TypeOf((*MockDiceInterface)(nil).Cheat), arg0)
}

// GetFaces mocks base method
func (m *MockDiceInterface) GetFaces() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFaces")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetFaces indicates an expected call of GetFaces
func (mr *MockDiceInterfaceMockRecorder) GetFaces() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFaces", reflect.TypeOf((*MockDiceInterface)(nil).GetFaces))
}

// SetFaces mocks base method
func (m *MockDiceInterface) SetFaces(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetFaces", arg0)
}

// SetFaces indicates an expected call of SetFaces
func (mr *MockDiceInterfaceMockRecorder) SetFaces(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetFaces", reflect.TypeOf((*MockDiceInterface)(nil).SetFaces), arg0)
}
